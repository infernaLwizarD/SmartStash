class Web::<%= class_name.pluralize %>Controller < Web::ApplicationController
  respond_to :html, :json
  before_action :find_and_authorize_<%= _class_name_dd %>, except: %i[new create index]

  def index
    authorize <%= class_name %>

    @q = policy_scope(<%= class_name %>).ransack(params[:q])
    @pagy, @<%= plural_name.underscore %> = pagy(@q.result)
  end

  def show
    respond_with @<%= _class_name_dd %>
  end

  def new
    authorize <%= class_name %>

    @<%= _class_name_dd %> = <%= class_name %>.new
    respond_with @<%= _class_name_dd %>
  end

  def edit
  end

  def create
    authorize <%= class_name %>

    @<%= _class_name_dd %> = <%= class_name %>.new(<%= _class_name_dd %>_params)
    @<%= _class_name_dd %>.creator_id = current_user.id
    flash[:notice] = '<%= r_capitalize(resource_name) %> <%= 'успешно создан(а)'.force_encoding('UTF-8') %>' if @<%= _class_name_dd %>.save
    respond_with @<%= _class_name_dd %>
  end

  def update
    if @<%= _class_name_dd %>.update(<%= _class_name_dd %>_params)
      flash[:notice] = '<%= r_capitalize(resource_name) %><%= ' отредактирован(а)'.force_encoding('UTF-8') %>' if @<%= _class_name_dd %>.saved_changes?
      redirect_to action: :show
    else
      render :edit
    end
  end

  def destroy
    @<%= _class_name_dd %>.discard
    flash[:notice] = '<%= r_capitalize(resource_name) %><%= ' удален(а)'.force_encoding('UTF-8') %>'
    redirect_to <%= _class_name_ug.pluralize %>_path
  end

  def restore
    @<%= _class_name_dd %>.undiscard!
    flash[:notice] = '<%= r_capitalize(resource_name) %><%= ' восстановлен(а)'.force_encoding('UTF-8') %>'
    respond_with @<%= _class_name_dd %>
  end

  private

  def find_and_authorize_<%= _class_name_dd %>
    @<%= _class_name_dd %> = <%= class_name %>.find(params[:id])
    authorize @<%= _class_name_dd %>
  end

  def <%= _class_name_dd %>_params
    attributes = %i[label]
    params.require(:<%= _class_name_dd %>).permit(attributes)
  end
end
